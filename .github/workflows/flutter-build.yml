name: Flutter CI Build

# Controls when the workflow will run
on:
  push:
    branches: [ main ] # Or your default branch
  pull_request:
    branches: [ main ] # Or your default branch
  workflow_dispatch: # Allows manual triggering

jobs:
  #----------------------------------------------------
  # Build Android (APK and AppBundle)
  #----------------------------------------------------
  build_android:
    name: Build Flutter (Android)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Or 'zulu', 'adopt', etc.
          java-version: '17'      # Flutter often requires Java 11 or higher

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # Or specify a version 'flutter-version: 3.x.x'
          # cache: true # Enable Flutter cache (experimental but useful)

      # Optional: Cache Pub dependencies
      # - name: Cache Pub dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
      #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pub-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Build Flutter APK (Release)
        run: flutter build apk --release

      - name: Build Flutter AppBundle (Release)
        run: flutter build appbundle --release

      - name: Upload Android APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Android AppBundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  #----------------------------------------------------
  # Build iOS (Requires macOS runner)
  #----------------------------------------------------
  build_ios:
    name: Build Flutter (iOS)
    runs-on: macos-latest # iOS builds require macOS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # cache: true

      # Optional: Cache Pub dependencies
      # - name: Cache Pub dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
      #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pub-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build Flutter iOS (Release - No Code Signing)
        # Use --no-codesign for CI unless you set up signing secrets
        run: flutter build ios --release --no-codesign

      - name: Archive iOS Release Build
        # The output is a .app folder, zip it for easy upload/download
        run: |
          cd build/ios/iphoneos
          zip -r ../../../release-ios-app.zip Runner.app

      - name: Upload iOS App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-ios-app
          path: release-ios-app.zip # Path to the zipped .app

  #----------------------------------------------------
  # Build Web
  #----------------------------------------------------
  build_web:
    name: Build Flutter (Web)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # cache: true

      # Optional: Cache Pub dependencies
      # - name: Cache Pub dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
      #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pub-

      - name: Enable Flutter Web
        run: flutter config --enable-web

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build Flutter Web (Release)
        # Adjust --base-href if deploying to a subdirectory (e.g., GitHub Pages)
        # run: flutter build web --release --base-href "/${{ github.event.repository.name }}/"
        run: flutter build web --release

      - name: Upload Web Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-web
          path: build/web

  #----------------------------------------------------
  # Build Linux
  #----------------------------------------------------
  build_linux:
    name: Build Flutter (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # cache: true

      # Optional: Cache Pub dependencies
      # - name: Cache Pub dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
      #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pub-

      - name: Enable Flutter Linux Desktop
        run: flutter config --enable-linux-desktop

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build Flutter Linux (Release)
        run: flutter build linux --release

      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: build/linux/x64/release/bundle

  #----------------------------------------------------
  # Build macOS (Requires macOS runner)
  #----------------------------------------------------
  build_macos:
    name: Build Flutter (macOS)
    runs-on: macos-latest # macOS builds require macOS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # cache: true

      # Optional: Cache Pub dependencies
      # - name: Cache Pub dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
      #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pub-

      - name: Enable Flutter macOS Desktop
        run: flutter config --enable-macos-desktop

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build Flutter macOS (Release)
        # Add --no-codesign if not setting up signing
        run: flutter build macos --release

      - name: Archive macOS Release Build
        # Find the actual app name in build/macos/Build/Products/Release/
        # Replace 'YourAppName.app' if necessary
        run: |
          cd build/macos/Build/Products/Release/
          zip -r ../../../../release-macos-app.zip *.app

      - name: Upload macOS App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-macos-app
          path: release-macos-app.zip # Path to the zipped .app

  #----------------------------------------------------
  # Build Windows (Requires Windows runner)
  #----------------------------------------------------
  build_windows:
    name: Build Flutter (Windows)
    runs-on: windows-latest # Windows builds require Windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # cache: true

      # Optional: Cache Pub dependencies
      # - name: Cache Pub dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
      #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pub-

      - name: Enable Flutter Windows Desktop
        run: flutter config --enable-windows-desktop

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build Flutter Windows (Release)
        run: flutter build windows --release

      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: build/windows/runner/Release # Contains the EXE and required DLLs
